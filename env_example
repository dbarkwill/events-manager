# Docker user and group ids
# On linux these should match your ids
USER_ID=1000
GROUP_ID=1000

# You would typically use rake secret to generate a secure token. It is
# critical that you keep this value private in production.
# To generate the token, run docker compose run --rm --no-deps web bundle exec rake secret
SECRET_TOKEN=<Replace with Secret Token>

# Unicorn is more than capable of spawning multiple workers, and in production
# you would want to increase this value but in development you should keep it
# set to 1.

# It becomes difficult to properly debug code if there's multiple copies of
# your application running via workers and/or threads.
WORKER_PROCESSES=10

# This will be the address and port that Unicorn binds to. The only real
# reason you would ever change this is if you have another service running
# that must be on port 8010.
LISTEN_ON=0.0.0.0:8010

# This is how we'll connect to PostgreSQL. It's good practice to keep the
# username lined up with your application's name but it's not necessary.
#
# Since we're dealing with development mode, it's ok to have a weak password
# such as yourpassword but in production you'll definitely want a better one.
#
# Eventually we'll be running everything in Docker containers, and you can set
# the host to be equal to postgres thanks to how Docker allows you to link
# containers.
#
# Everything else is standard Rails configuration for a PostgreSQL database.
DATABASE_PW=MPapWzLWp5cEEFrKhLU6

# No changes are necessary to the Database URL below
DATABASE_URL=postgresql://event_manager:${DATABASE_PW}@db:5432/event_manager?encoding=utf8&pool=5&timeout=5000


# Both of these values are using the same Redis address but in a real
# production environment you may want to separate Sidekiq to its own instance,
# which is why they are separated here.
#
# We'll be using the same Docker link trick for Redis which is how we can
# reference the Redis hostname as redis.
CACHE_URL=redis://redis:6379/0
JOB_WORKER_URL=redis://redis:6379/0
REDIS_URL=redis://redis:6379

# Portainer Admin Password. Only used for display within the app, does not change when updated.
PORTAINER_PW=<Replace with Portainer Admin Password>

# Portainer Admin Password Hash 
# Can be generated by the following: docker run --rm httpd:2.4-alpine htpasswd -nbB admin '<password>' | cut -d ":" -f 2 
# You must escape any '$' with an additional '$'
PORTAINER_PW_HASH=<Replace with Portainer Admin Password Hash>

# Setting to run the server in prodution mode. Supresses error messages and increases performance. Comment out to run in default (development) mode.
RAILS_ENV=production
RAILS_LOG_TO_STDOUT=true
